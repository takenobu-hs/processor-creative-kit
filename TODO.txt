

TODO
====

refactoring
-----------

### any
 - strict eval parseInst before idb
 - assembler error analyzer
 - shift instruction name. << direction.




error
-----



low priority
------------
 - wrap address message?


document
--------
 - runhaskell examples/idb.hs examples/test0.asm < zz  (script idb)



package
-------
 - HLint
 - HSpec, HUnit
 - QuickCheck
 - Travis-CI
 - README.md 
     https://github.com/yi-editor/yi
     https://github.com/philopon/apiary



done
----
 - trace pc, reg (hexa)
 - profile (hexa)?
config imem, dmem address test
 - idb parsing
(idb) x *2
*** Exception: Prelude.read: no parse
(idb) x/100 -
*** Exception: Prelude.read: no parse
delete, enable, ... (read parse)
 - asm hex imm (0x123)
(idb) x 10000
*** Exception: Ix{Int}.index: Index (10000) out of range ((0,7))
 - getDmem range check
 - idb watch parser
(idb) watch r5 > 4
idb.hs: strToGReg"r5"
 - toLower (flag, inst name,...)
 - idb space parser
(idb) delete  2     ; space!
 x show; R0 .. R7 : [...  FC .. FZ : 
 x cabal auto test
 x profiler file input
### gitignore
 - refactoring Debugger.hs, InteractiveDebugger.hs
### config
 - crlf
 - gitignore
### refactoring "show CpuState"
 - limit exoprt. for haddock
 - getDmem and any, api




